{"version":3,"sources":["webpack:///webpack/bootstrap 724b62b61d39e8c5cedc","webpack:///./src/server/server.js","webpack:///external \"source-map-support/register\"","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"socket.io\""],"names":["isDevelopment","process","env","NODE_ENV","app","server","Server","io","set","use","static","useExternalStyles","get","req","res","render","on","console","log","socket","request","connection","remoteAddress","port","PORT","startServer","listen"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACrCA;;AAEA;;;;AACA;;;;AACA;;;;;;AALA;AAOA,KAAMA,gBAAgBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA/C;;AAEA;AACA,KAAMC,MAAM,wBAAZ;AACA,KAAMC,SAAS,IAAI,eAAKC,MAAT,CAAgBF,GAAhB,CAAf;AACA,KAAMG,KAAK,sBAASF,MAAT,CAAX;;AAGA;;;AAIA;AACAD,KAAII,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AACAJ,KAAIK,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,OAAf,CAAR;;AAEA,KAAMC,oBAAoBV,QAAQC,GAAR,CAAYC,QAAtC;AACA;AACAC,KAAIQ,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,SAAIC,MAAJ,CAAW,OAAX,EAAoB;AAChBJ;AADgB,MAApB;AAGH,EAJD;;AAMA;;;AAKA;AACAJ,IAAGS,EAAH,CAAM,YAAN,EAAoB,kBAAU;AAC1BC,aAAQC,GAAR,gCAAyCC,OAAOC,OAAP,CAAeC,UAAf,CAA0BC,aAAnE;AACH,EAFD;;AAOA;AACA,KAAMC,OAAOtB,QAAQC,GAAR,CAAYsB,IAAZ,IAAoB,IAAjC;AACA,UAASC,WAAT,GAAwB;AACpBpB,YAAOqB,MAAP,CAAcH,IAAd,EAAoB,YAAM;AACtBN,iBAAQC,GAAR,wCAAiDK,IAAjD;AACH,MAFD;AAGH;;AAEDE,e;;;;;;ACpDA,yD;;;;;;ACAA,qC;;;;;;ACAA,kC;;;;;;ACAA,uC","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 724b62b61d39e8c5cedc\n **/","// server.js = the entry into our application!!!!!!!!!!!!!!!!!\nimport \"source-map-support/register\";\n\nimport express from \"express\";\nimport http from \"http\";\nimport socketIo from \"socket.io\";\n\nconst isDevelopment = process.env.NODE_ENV !== \"production\";\n\n// SETUP:\nconst app = express();\nconst server = new http.Server(app);\nconst io = socketIo(server);\n\n\n// Client webpack\n\n\n\n// Configure Express\napp.set(\"view engine\", \"jade\");\napp.use(express.static(\"publc\"));\n\nconst useExternalStyles = process.env.NODE_ENV;\n// our only route:\napp.get(\"/\", (req, res) => {\n    res.render(\"index\", {\n        useExternalStyles\n    });\n});\n\n// Modules\n\n\n\n\n// socket\nio.on(\"connection\", socket => {\n    console.log(`===> Got connection from: ${socket.request.connection.remoteAddress}`);\n});\n\n\n\n\n// startup\nconst port = process.env.PORT || 3000;\nfunction startServer () {\n    server.listen(port, () => {\n        console.log(`===> Started http server on port: ${port}`);\n    });\n};\n\nstartServer();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/server/server.js\n **/","module.exports = require(\"source-map-support/register\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"source-map-support/register\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"express\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"http\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"http\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"socket.io\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"socket.io\"\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}